<!DOCTYPE html>
<html>
  <head>
      <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
  </head>
  <body>
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->

    <h4>Room: <%= room.name %></h1>
    <input type="hidden" id="name" value="<%= room.name %>"/>
    <input type="hidden" id="seek" value="<%= room.seek %>"/>
    <input type="hidden" id="state" value="<%= room.state %>"/>        
    <form>
      <input id="videolink" name="videolink" placeholder="Enter video link"/>
      <button type="button" id="videosubmitbutton">Play and Share!</button>
    </form>
    <h1>Currently playing: <%= room.videoid %></h1>
    <input id="videolinkval" type="hidden" value="<%= room.videoid %>"/>
    <div id="player"></div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      var socket=io();
      var room=$('#name').val();
      var time;

     socket.on('connect', function(data) {
        socket.emit('connectme', $('#name').val());
      });

      var tag = document.createElement('script');

      tag.src = "http://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
      var player;


      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: $('#videolinkval').val() || 'M7lc1UVf-VE',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      socket.on('updatestate', function (state) {
        var playerstate=player.getPlayerState();
        
        //time=state.seek;
        if (state.state==playerstate) return;
        if (state.state==YT.PlayerState.PLAYING)
          player.playVideo();
        else if (state.state==YT.PlayerState.ENDED)
          player.stopVideo();
        else player.pauseVideo();    
        //player.seekTo(state.seek,true);    
      });

      var processingseek=false;
      socket.on('updateseek', function (seekto) {
        var seek;
        if (seekto.state==2) seek=seekto.seek;
        else if (seekto.state==1) {
          seek=seekto.seek+(Date.now()-seekto.lastupdated)/1000;
        }
        if (Math.abs(player.getCurrentTime()-seek)<5) return;
        console.log("Update seek event received for + "+seek);
        player.seekTo(seek,true);  
        time=seek;
        processingseek=true;//This is necessary as player.seekTo does not update the player state immediately
      });

      function onPlayerReady(event) {
        var seek=$('#seek').val();
        var state=$('#state').val();
        player.seekTo(seek, true);
        if (state==YT.PlayerState.PLAYING)
          player.playVideo();
        else player.pauseVideo();
        time=seek;
        setInterval(syncseek, 500);
      }

      function onPlayerStateChange(event) {
        if (event.data!=1 && event.data!=2 && event.data!=0) return;
        socket.emit('updatestate', {state: event.data, room: room, seek: player.getCurrentTime()});
      }

      function syncseek() {
        var currtime=player.getCurrentTime();
        var currstate=player.getPlayerState();
        if (processingseek) {
          if(Math.abs(time-currtime)<5) processingseek=false;
          else return;
        }
        if (currstate!=1 && currstate!=2) return;
        if (Math.abs(currtime-time)>5) {
          socket.emit('updateseek',{seek: currtime, room: room, state: currstate, lastupdated: Date.now()});
          console.log("Update seek event emitted with time = "+time+"and current time = "+currtime);
        }
        time=currtime;
      }


      $('#videosubmitbutton').on('click', function () {
          videoid=$('#videolink').val();
          player.loadVideoById(videoid);
          socket.emit('updatevideo', {videoid: videoid, room: room});
      });

      socket.on('updatevideo', function (video) {
          player.loadVideoById(video);
          time=0;
      });




    </script>
  </body>
</html>